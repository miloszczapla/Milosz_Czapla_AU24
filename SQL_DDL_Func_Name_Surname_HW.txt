Prepare answers to the following questions
What operations do the following functions perform: film_in_stock yes, film_not_in_stock yes, inventory_in_stock yes, get_customer_balance yes, inventory_held_by_customer yes, rewards_report yes, last_day yes? You can find these functions in dvd_rental database.
those functions are present in the database.
film_in_stock checks whether a film is available in stock,
film_not_in_stock checks whether a film is currently out of stock,
inventory_in_stock checks how many copies of a particular film are currently available in the inventory,
get_customer_balance etrieves the current balance or outstanding amount owed by a customer. It could return the balance from unpaid rentals or any fees associated with late returns,
inventory_held_by_customer returns the films currently held by a specific customer,
rewards_report generates a list of customers who meet certain criteria for receiving rewards,
last_day eturns the last day of a given month

Why does ‘rewards_report’ function return 0 rows? Correct and recreate the function, so that it's able to return rows properly.
because of date Range Issue - it used wrong omnt previousy,
too restrictive having clousure and
No Matching Data in payment Table

fixed:
CREATE OR REPLACE FUNCTION public.rewards_report(min_monthly_purchases integer, min_dollar_amount_purchased numeric)
RETURNS SETOF customer
LANGUAGE plpgsql
SECURITY DEFINER
AS $function$
DECLARE
    last_month_start DATE;
    last_month_end DATE;
    rr RECORD;
    tmpSQL TEXT;
BEGIN

    /* Sanity checks */
    IF min_monthly_purchases <= 0 THEN
        RAISE EXCEPTION 'Minimum monthly purchases parameter must be > 0';
    END IF;
    IF min_dollar_amount_purchased <= 0.00 THEN
        RAISE EXCEPTION 'Minimum monthly dollar amount purchased parameter must be > $0.00';
    END IF;

    -- Calculate the date range for last month
    last_month_start := CURRENT_DATE - INTERVAL '1 month';
    last_month_start := to_date(EXTRACT(YEAR FROM last_month_start) || '-' || EXTRACT(MONTH FROM last_month_start) || '-01', 'YYYY-MM-DD');
    last_month_end := (last_month_start + INTERVAL '1 MONTH' - INTERVAL '1 day')::DATE;

    /*
    Create a temporary storage area for Customer IDs.
    */
    CREATE TEMPORARY TABLE tmpCustomer (customer_id INTEGER NOT NULL PRIMARY KEY);

    -- Prepare the dynamic SQL to find qualifying customers
    tmpSQL := 'INSERT INTO tmpCustomer (customer_id)
        SELECT p.customer_id
        FROM payment AS p
        WHERE DATE(p.payment_date) BETWEEN ' || quote_literal(last_month_start) || ' AND ' || quote_literal(last_month_end) || '
        GROUP BY p.customer_id
        HAVING COUNT(p.customer_id) >= ' || min_monthly_purchases || '
        AND SUM(p.amount) >= ' || min_dollar_amount_purchased;

    -- Execute the dynamic query
    EXECUTE tmpSQL;

    -- Output all customer information of matching rewardees
    FOR rr IN EXECUTE 'SELECT c.* FROM tmpCustomer t INNER JOIN customer c ON t.customer_id = c.customer_id' LOOP
        RETURN NEXT rr;
    END LOOP;

    -- Clean up
    DROP TABLE tmpCustomer;

    RETURN;
END;
$function$
;


Is there any function that can potentially be removed from the dvd_rental codebase? If so, which one and why?
The last_day function could potentially be removed from the codebase if the same result can be achieved easly with built-in SQL functionality: date_trunc('month', now()) + interval '1 month - 1 day'
film_not_in_stock  because it is bassicly reverse return of film_in_stock
* The ‘get_customer_balance’ function describes the business requirements for calculating the client balance. Unfortunately, not all of them are implemented in this function. Try to change function using the requirements from the comments.
* How do ‘group_concat’ and ‘_group_concat’ functions work? (database creation script might help) Where are they used?
* What does ‘last_updated’ function do? Where is it used?
* What is tmpSQL variable for in ‘rewards_report’ function? Can this function be recreated without EXECUTE statement and dynamic SQL? Why?

